<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List
href="./lecture%20-%20mit%206-825%20techniques%20in%20ai%20020910_files/filelist.xml">
<title>Title</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Greg Detre</o:Author>
  <o:LastAuthor>Greg Detre</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>76</o:TotalTime>
  <o:Created>2003-07-02T01:05:00Z</o:Created>
  <o:LastSaved>2003-07-02T01:05:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>791</o:Words>
  <o:Characters>4511</o:Characters>
  <o:Company>-</o:Company>
  <o:Lines>37</o:Lines>
  <o:Paragraphs>9</o:Paragraphs>
  <o:CharactersWithSpaces>5539</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DrawingGridHorizontalSpacing>4.5 pt</w:DrawingGridHorizontalSpacing>
  <w:DrawingGridVerticalSpacing>12.25 pt</w:DrawingGridVerticalSpacing>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:Compatibility>
   <w:WW6BorderRules/>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:"Book Antiqua";
	panose-1:2 4 6 2 5 3 5 3 3 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:647 0 0 0 159 0;}
@font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:553679495 -2147483648 8 0 66047 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin-top:8.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h1
	{mso-style-next:Normal;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:0in;
	text-align:center;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:purple;
	mso-font-kerning:14.0pt;
	mso-bidi-font-weight:normal;
	font-style:italic;
	mso-bidi-font-style:normal;}
h2
	{mso-style-next:Normal;
	margin-top:16.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:2;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:navy;
	mso-bidi-font-weight:normal;
	font-style:italic;
	mso-bidi-font-style:normal;}
h3
	{mso-style-next:Normal;
	margin-top:16.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:3;
	tab-stops:right 451.45pt;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:green;
	font-weight:normal;
	font-style:italic;
	mso-bidi-font-style:normal;}
h4
	{mso-style-next:Normal;
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	text-align:justify;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:4;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:Arial;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-font-weight:normal;}
h5
	{mso-style-next:Normal;
	margin-top:15.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	mso-outline-level:5;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	color:maroon;
	font-weight:normal;
	font-style:italic;
	mso-bidi-font-style:normal;}
h6
	{mso-style-parent:"Heading 5";
	mso-style-next:Normal;
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	text-align:justify;
	mso-pagination:widow-orphan;
	mso-outline-level:6;
	font-size:11.0pt;
	font-family:"Times New Roman";
	color:olive;
	font-weight:normal;
	mso-bidi-font-weight:bold;
	font-style:italic;
	mso-bidi-font-style:normal;}
p.MsoHeading7, li.MsoHeading7, div.MsoHeading7
	{mso-style-next:Normal;
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	text-align:justify;
	mso-pagination:widow-orphan;
	mso-outline-level:7;
	font-size:10.0pt;
	font-family:Arial;
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.MsoToc1, li.MsoToc1, div.MsoToc1
	{mso-style-parent:"Heading 1";
	mso-style-next:Normal;
	margin-top:3.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	tab-stops:.75in right 451.45pt;
	font-size:11.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	font-variant:small-caps;
	color:purple;
	mso-font-kerning:14.0pt;
	font-weight:bold;
	mso-bidi-font-weight:normal;
	font-style:italic;
	mso-bidi-font-style:normal;}
p.MsoToc2, li.MsoToc2, div.MsoToc2
	{mso-style-parent:"Heading 2";
	mso-style-next:Normal;
	margin-top:3.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:10.1pt;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	tab-stops:right 451.3pt;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:navy;
	font-style:italic;
	mso-bidi-font-style:normal;}
p.MsoToc3, li.MsoToc3, div.MsoToc3
	{mso-style-parent:"TOC 2";
	mso-style-next:Normal;
	margin-top:3.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:20.0pt;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	tab-stops:right 451.45pt;
	font-size:9.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:teal;
	font-style:italic;
	mso-bidi-font-style:normal;}
p.MsoToc4, li.MsoToc4, div.MsoToc4
	{mso-style-update:auto;
	mso-style-parent:"TOC 3";
	mso-style-next:Normal;
	margin-top:3.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:35.7pt;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	tab-stops:right 451.45pt;
	font-size:7.5pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	color:maroon;
	mso-bidi-font-weight:bold;
	font-style:italic;
	mso-bidi-font-style:normal;}
p.MsoHeader, li.MsoHeader, div.MsoHeader
	{margin-top:8.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	tab-stops:center 239.75pt right 6.65in;
	font-size:11.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	font-style:italic;
	mso-bidi-font-style:normal;}
p.MsoDate, li.MsoDate, div.MsoDate
	{margin-top:8.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	text-align:right;
	mso-pagination:widow-orphan;
	font-size:11.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	font-style:italic;
	mso-bidi-font-style:normal;}
p.MsoDocumentMap, li.MsoDocumentMap, div.MsoDocumentMap
	{margin-top:8.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	text-align:justify;
	mso-pagination:widow-orphan;
	background:navy;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:Tahoma;
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
p.Section, li.Section, div.Section
	{mso-style-name:Section;
	margin-top:8.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	font-weight:bold;
	mso-bidi-font-weight:normal;}
p.Heading0, li.Heading0, div.Heading0
	{mso-style-name:"Heading 0";
	mso-style-parent:"Heading 1";
	margin-top:6.0pt;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:0in;
	text-align:center;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	border:none;
	mso-border-alt:solid windowtext .5pt;
	padding:0in;
	mso-padding-alt:1.0pt 4.0pt 1.0pt 4.0pt;
	font-size:16.0pt;
	mso-bidi-font-size:10.0pt;
	font-family:"Book Antiqua";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	font-variant:small-caps;
	color:purple;
	font-weight:bold;
	mso-bidi-font-weight:normal;}
span.EmailStyle23
	{mso-style-type:personal;
	mso-ansi-font-size:10.0pt;
	mso-ascii-font-family:Arial;
	mso-hansi-font-family:Arial;
	mso-bidi-font-family:Arial;
	color:windowtext;}
span.EmailStyle24
	{mso-style-type:personal;
	mso-ansi-font-size:10.0pt;
	mso-ascii-font-family:Arial;
	mso-hansi-font-family:Arial;
	mso-bidi-font-family:Arial;
	color:windowtext;}
@page Section1
	{size:595.3pt 841.9pt;
	margin:68.05pt 68.05pt 68.05pt 68.05pt;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
@list l0
	{mso-list-id:46296300;
	mso-list-type:simple;
	mso-list-template-ids:134807567;}
@list l0:level1
	{mso-level-tab-stop:.25in;
	mso-level-number-position:left;
	margin-left:.25in;
	text-indent:-.25in;}
@list l1
	{mso-list-id:64184083;
	mso-list-type:simple;
	mso-list-template-ids:134807567;}
@list l1:level1
	{mso-level-tab-stop:.25in;
	mso-level-number-position:left;
	margin-left:.25in;
	text-indent:-.25in;}
@list l2
	{mso-list-id:685330867;
	mso-list-type:simple;
	mso-list-template-ids:-918630076;}
@list l2:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.25in;
	mso-level-number-position:left;
	margin-left:.25in;
	text-indent:-.25in;
	mso-ansi-font-size:8.0pt;
	font-family:Symbol;}
@list l3
	{mso-list-id:1746143482;
	mso-list-type:simple;
	mso-list-template-ids:-719658964;}
@list l3:level1
	{mso-level-tab-stop:.25in;
	mso-level-number-position:left;
	margin-left:.25in;
	text-indent:-.25in;}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
</head>

<body lang=EN-GB style='tab-interval:17.85pt'>

<div class=Section1>

<h1>Lecture � MIT 6.825 Techniques in AI � Agent programs � problem-solving
problems</h1>

<p class=MsoNormal align=right style='text-align:right'>Greg Detre</p>

<p class=MsoNormal align=right style='margin-top:2.0pt;text-align:right'>09:30
Tuesday, September 10, 2002</p>

<p class=MsoNormal align=right style='margin-top:2.0pt;text-align:right'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>agent programs � how to deal with the lack of computational
power</p>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:17.85pt;margin-bottom:.0001pt'>make a giant lookup table?</p>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:17.85pt;margin-bottom:.0001pt'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<h2>Assumptions</h2>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:17.85pt;margin-bottom:.0001pt'>assume (to begin with) that:</p>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:53.7pt;margin-bottom:.0001pt;text-indent:-.25in;mso-list:l0 level1 lfo5;
tab-stops:list 53.7pt'><![if !supportLists]>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]><i style='mso-bidi-font-style:normal'>the agent knows the
world dynamics</i></p>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:71.4pt;margin-bottom:.0001pt'>learning allows us to avoid this
assumption</p>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:53.7pt;margin-bottom:.0001pt;text-indent:-.25in;mso-list:l0 level1 lfo5;
tab-stops:list 53.7pt'><![if !supportLists]>2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]><i style='mso-bidi-font-style:normal'>world state is finite
and not too big (to enumerate)</i></p>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:71.4pt;margin-bottom:.0001pt'>logic allows us to avoid enumerating
states</p>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:53.7pt;margin-bottom:.0001pt;text-indent:-.25in;mso-list:l0 level1 lfo5;
tab-stops:list 53.7pt'><![if !supportLists]>3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]><i style='mso-bidi-font-style:normal'>world is deterministic</i></p>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:71.4pt;margin-bottom:.0001pt'>uncertainty allows us to avoid this</p>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:53.7pt;margin-bottom:.0001pt;text-indent:-.25in;mso-list:l0 level1 lfo5;
tab-stops:list 53.7pt'><![if !supportLists]>4.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]><i style='mso-bidi-font-style:normal'>agent knows the current
state</i></p>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:71.4pt;margin-bottom:.0001pt'>disjunctive logic + uncertainty
representations allow us to avoid this</p>

<h2>Example � planning a route through a map</h2>

<p class=MsoNormal>see Russell + Norwig??? textbook</p>

<h3>Formal definition</h3>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'>set of states</i> �
e.g. cities</p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'>initial state</i> �
e.g. A</p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'>operators</i> �
mappings from states to states S <span style='font-size:10.0pt;font-family:
Symbol;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman";
mso-char-type:symbol;mso-symbol-font-family:Symbol'><span style='mso-char-type:
symbol;mso-symbol-font-family:Symbol'>�</span></span> S, i.e. the roads</p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'>goal test</i> � tells
us whether we�re done, i.e. a mapping from S <span style='font-size:10.0pt;
font-family:Symbol;mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:
"Times New Roman";mso-char-type:symbol;mso-symbol-font-family:Symbol'><span
style='mso-char-type:symbol;mso-symbol-font-family:Symbol'>�</span></span>
{t,f}</p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'>path cost</i> � (S,O)*
<span style='font-size:10.0pt;font-family:Symbol;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman";mso-char-type:symbol;mso-symbol-font-family:
Symbol'><span style='mso-char-type:symbol;mso-symbol-font-family:Symbol'>�</span></span><span
style='font-size:10.0pt'> </span>R<span style='mso-tab-count:1'>����� </span>often
articulable as a sum <span style='font-size:10.0pt;font-family:Symbol;
mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman";
mso-char-type:symbol;mso-symbol-font-family:Symbol'><span style='mso-char-type:
symbol;mso-symbol-font-family:Symbol'>�span></span>c(S<sub>i</sub>,O<sub>i</sub>)</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<h3>Search algorithms � uninformed</h3>

<p class=MsoNormal style='margin-left:17.85pt'>list of nodes in a search tree</p>

<p class=MsoNormal style='margin-left:17.85pt'>each node is a partial path
towards the goal</p>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:35.7pt;margin-bottom:.0001pt'>you can�t map from the tree back to
the graph, i.e. the nodes on the tree don�t represent cities, but actually
city-by-way-of-another-city (e.g. Z<sub>A</sub> represents being at Z via A)</p>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:53.55pt;margin-bottom:.0001pt'>i.e. there will be many more nodes
than cities</p>

<h5>Agenda</h5>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;mso-list:l2 level1 lfo6;
tab-stops:list .25in'><![if !supportLists]><span style='font-size:8.0pt;
mso-bidi-font-size:10.0pt;font-family:Symbol'>�<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>put the start state in the agenda</p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;mso-list:l2 level1 lfo6;
tab-stops:list .25in'><![if !supportLists]><span style='font-size:8.0pt;
mso-bidi-font-size:10.0pt;font-family:Symbol'>�<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>loop:</p>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:35.7pt;margin-bottom:.0001pt'>get a path out of the agenda</p>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:35.7pt;margin-bottom:.0001pt'>if goal, then return it</p>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:35.7pt;margin-bottom:.0001pt'>expand (put children in agenda)</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<h5>Depth-first search</h5>

<p class=MsoNormal>go as far as you can till things aren�t working, then
backtrack the minimum amount and try again</p>

<p class=MsoNormal>i.e. treat the agenda as a stack</p>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:17.85pt;margin-bottom:.0001pt'>put children at top</p>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:17.85pt;margin-bottom:.0001pt'>take new path off top</p>

<p class=MsoNormal style='margin-top:0in'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-top:0in'>need to avoid revisiting old nodes
(i.e. getting into a loop) � 2 strategies:</p>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:35.85pt;margin-bottom:.0001pt;text-indent:-.25in;mso-list:l1 level1 lfo7;
tab-stops:list 35.85pt'><![if !supportLists]>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>don�t add a node (path) to the agenda if it�s already on the
agenda</p>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:35.85pt;margin-bottom:.0001pt;text-indent:-.25in;mso-list:l1 level1 lfo7;
tab-stops:list 35.85pt'><![if !supportLists]>2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><![endif]>don�t add a state to the agenda if we�ve already expanded it</p>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:53.55pt;margin-bottom:.0001pt'>this method avoids a lot of extra
work</p>

<p class=MsoNormal style='margin-top:0in'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-top:0in'>not optimal in any sense � but very
easy to implement</p>

<h6>How much time and space?</h6>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'>b</i> = branching
factor (how many times it branches from a node � maximum)</p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'>m</i> = maximum depth
of tree</p>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:17.85pt;margin-bottom:.0001pt'><i style='mso-bidi-font-style:normal'>m</i>
corresponds to the longest non-looping path (which may well be longer than the
longest path from <i style='mso-bidi-font-style:normal'>a</i> to <i
style='mso-bidi-font-style:normal'>b</i> if there�s a wild-goose-chase path)</p>

<p class=MsoNormal><i style='mso-bidi-font-style:normal'>d</i> = goal depth
(the depth in the search tree at which a goal occurs � usually the min goal)</p>

<p class=MsoNormal style='margin-top:0in'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-top:0in'>branches die when you�ve been all
through them and end up somewhere you�ve been before</p>

<p class=MsoNormal style='margin-top:0in'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-top:0in'>time = O(<i style='mso-bidi-font-style:
normal'>b<sup>m</sup></i>)</p>

<p class=MsoNormal>space = O(<i style='mso-bidi-font-style:normal'>mb</i>)</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<h5>Breadth-first search</h5>

<p class=MsoNormal>here, the agenda is a queue</p>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:17.85pt;margin-bottom:.0001pt'>take a new node from the front, and
add children at the end</p>

<p class=MsoNormal>this will always find the shortest path in terms of hops</p>

<p class=MsoNormal>doesn�t take path cost into account</p>

<h6>How much time + space?</h6>

<p class=MsoNormal>it will have to go down <i style='mso-bidi-font-style:normal'>d</i>
levels, and there are about <i style='mso-bidi-font-style:normal'>b<sup>d</sup></i>
nodes in <i style='mso-bidi-font-style:normal'>d</i> levels</p>

<p class=MsoNormal>time = O(<i style='mso-bidi-font-style:normal'>b<sup>d</sup></i>)</p>

<p class=MsoNormal>space = O(<i style='mso-bidi-font-style:normal'>b<sup>d</sup></i>)</p>

<p class=MsoNormal>so the time is faster, better solution, but bigger space
requirements than depth-first</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<h5>Iterative deepening solution</h5>

<p class=MsoNormal>best of both worlds</p>

<p class=MsoNormal>successive depth-first searches with an increasing depth
bound</p>

<p class=MsoNormal style='tab-stops:.25in 1.5in 2.5in'><i style='mso-bidi-font-style:
normal'><span style='mso-tab-count:1'>������ </span>depth bound<span
style='mso-tab-count:1'>����������� </span>space<span style='mso-tab-count:
1'>����������������� </span>time<o:p></o:p></i></p>

<p class=MsoNormal style='margin-top:4.0pt;tab-stops:.25in 1.5in 2.5in'><span
style='mso-tab-count:1'>������ </span>1<span style='mso-tab-count:1'>��������������������������������� </span><i
style='mso-bidi-font-style:normal'>b</i><span style='mso-tab-count:1'>������������������������� </span><i
style='mso-bidi-font-style:normal'>b</i></p>

<p class=MsoNormal style='margin-top:0in;tab-stops:.25in 1.5in 2.5in'><span
style='mso-tab-count:1'>������ </span>2<span style='mso-tab-count:1'>��������������������������������� </span>2<i
style='mso-bidi-font-style:normal'>b</i><span style='mso-tab-count:1'>����������������������� </span><i
style='mso-bidi-font-style:normal'>b</i><sup>2</sup></p>

<p class=MsoNormal style='margin-top:0in;tab-stops:.25in 1.5in 2.5in'><span
style='mso-tab-count:1'>������ </span>3<span style='mso-tab-count:1'>��������������������������������� </span>3<i
style='mso-bidi-font-style:normal'>b</i><span style='mso-tab-count:1'>����������������������� </span><i
style='mso-bidi-font-style:normal'>b</i><sup>3</sup></p>

<p class=MsoNormal style='margin-top:0in;tab-stops:.25in 1.5in 2.5in'><span
style='mso-tab-count:1'>������ </span>�<span style='mso-tab-count:1'>������������������������������ </span>�<span
style='mso-tab-count:1'>����������������������� </span>�</p>

<p class=MsoNormal style='margin-top:0in;tab-stops:.25in 1.5in 2.5in'><span
style='mso-tab-count:1'>������ </span>max<span style='mso-tab-count:1'>��������������������������� </span>O(<i
style='mso-bidi-font-style:normal'>bd</i>)<span style='mso-tab-count:1'>���������������� </span><i
style='mso-bidi-font-style:normal'>b<sup>d+1</sup></i></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<h5>Uniform cost search</h5>

<p class=MsoNormal>agenda is a priority queue</p>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:17.85pt;margin-bottom:.0001pt'>priorities = length of path so far</p>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:17.85pt;margin-bottom:.0001pt'>a priority queue � take out the
thing with the lowest (or highest) priority gets taken out first each time</p>

<p class=MsoNormal>guaranteed to generate the least-cost path</p>

<p class=MsoNormal>this is why it�s important to have different representations
for different routes to the same city</p>

<p class=MsoNormal>you can also save space by getting rid of longer paths to
the same place (though if you don�t, they�ll just be ignored at the cost of
space)</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>R&amp;N assert that:</p>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:17.85pt;margin-bottom:.0001pt'>time = O(<i style='mso-bidi-font-style:
normal'>b<sup>d</sup></i>)</p>

<p class=MsoNormal>LPK assert:</p>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:17.85pt;margin-bottom:.0001pt'>time = O(<i style='mso-bidi-font-style:
normal'>b<sup>m</sup></i>)</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>however, the length of the early steps may not be an
indication of the length further down</p>

<p class=MsoNormal>heuristic: h(state) is an estimate of the minimum cost to a
goal</p>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:17.85pt;margin-bottom:.0001pt'>for instance, you could use the
euclidean distance to your goal (e.g. for a geographical map)</p>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:17.85pt;margin-bottom:.0001pt'>use this heuristic function to bias
the search</p>

<h5>A* search</h5>

<p class=MsoNormal>agenda is still a priority queue</p>

<p class=MsoNormal>priorities = g(p) + h(p)</p>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:17.85pt;margin-bottom:.0001pt'>where:</p>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:35.7pt;margin-bottom:.0001pt'>g(p) = length of path so far</p>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:35.7pt;margin-bottom:.0001pt'>h(p) = heuristic for how far from
goal</p>

<p class=MsoNormal>this is guaranteed to generate the least-cost path</p>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:17.85pt;margin-bottom:.0001pt'>however, h has to be an
underestimate of the cost to the goal</p>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:17.85pt;margin-bottom:.0001pt'>otherwise, a route that appears to
be taking you very near to the goal might be blocked by a ravine</p>

<p class=MsoNormal>in a way, a uniform cost search is a kind of A* search with
a really lame heuristic</p>

<p class=MsoNormal>if you have a good <i style='mso-bidi-font-style:normal'>h</i>
(i.e. it�s an underestimate, but pretty tight), then it really helps</p>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:17.85pt;margin-bottom:.0001pt'>if <i style='mso-bidi-font-style:
normal'>h</i> is right, then you go straight to your goal</p>

<p class=MsoNormal>goal nodes <i style='mso-bidi-font-style:normal'>h</i> = 0</p>

<p class=MsoNormal>if <i style='mso-bidi-font-style:normal'>h</i> is too high
(i.e. an overestimate), then it could take you to a non-optimal goal, by
keeping you from exploring a path that is optimal which you ignore because its <i
style='mso-bidi-font-style:normal'>h</i> takes its overall priority above other
non-optimal paths</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<h2>Admin</h2>

<p class=MsoNormal>6.825-students@mit.edu</p>

<p class=MsoNormal>web page pdf handouts</p>

<p class=MsoNormal>stellar.mit.edu</p>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:17.85pt;margin-bottom:.0001pt'>need privileges</p>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:17.85pt;margin-bottom:.0001pt'>videos, ppt with voice-over</p>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:17.85pt;margin-bottom:.0001pt'>transcripts</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<h2>Questions</h2>

<p class=MsoNormal>�(S,O)* <span style='font-size:10.0pt;font-family:Symbol;
mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman";
mso-char-type:symbol;mso-symbol-font-family:Symbol'><span style='mso-char-type:
symbol;mso-symbol-font-family:Symbol'>�</span></span><span style='font-size:
10.0pt'> </span>R� � what does the star mean???</p>

<p class=MsoNormal>do I understand the path cost sum expression <span
style='font-size:10.0pt;font-family:Symbol;mso-ascii-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman";mso-char-type:symbol;mso-symbol-font-family:
Symbol'><span style='mso-char-type:symbol;mso-symbol-font-family:Symbol'>�span></span>c(S<sub>i</sub>,O<sub>i</sub>)
???</p>

<p class=MsoNormal>search algorithm � uninformed vs informed???</p>

<p class=MsoNormal>�don�t add a node to the agenda if we�ve already expanded
it� � why is this method better???</p>

<p class=MsoNormal>how is iterative deepening different from a breadth-first
search???</p>

<p class=MsoNormal>I think LPK are wrong about their uniform cost time estimate
� is that right???</p>

<p class=MsoNormal>maybe it would be good to add a tiny stochastic aspect that
goes down funny little high-cost alleys in the hope that it�ll get lucky and
find that it leads somewhere good, which you can then explore further???</p>

<p class=MsoNormal style='margin-top:4.0pt;margin-right:0in;margin-bottom:0in;
margin-left:17.85pt;margin-bottom:.0001pt'>y, kind of � that requires a
heuristic to tell you if your stochastic approach has taken you somewhere
helpful or not</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

</div>

</body>

</html>
